server:
  port: 8000
spring:
  application:
    name: apigateway-service
  profiles:
    active: window
    #config
  config:
    import: optional:configserver:http://localhost:8888
  cloud:
    config:
      name: ecommerce
    gateway:
      routes:
        - id: user-service
          uri: lb://USER-SERVICE
          predicates:
            - Path=/user-service/login
            - Method=POST
          filters:
            - RemoveRequestHeader=Cookie
            - RewritePath=/user-service/(?<segment>.*), /$\{segment}

        # user 유저 등록
        - id: user-service
          uri: lb://USER-SERVICE
          predicates:
            - Path=/user-service/users
            - Method=POST
          filters:
            - RemoveRequestHeader=Cookie
            - RewritePath=/user-service/(?<segment>.*), /$\{segment}

        #user actuator 조회
        - id: user-service
          uri: lb://USER-SERVICE
          predicates:
            - Path=/user-service/actuator/**
            - Method=GET,POST
          filters:
            - RemoveRequestHeader=Cookie
            - RewritePath=/user-service/(?<segment>.*), /$\{segment} # /user-service/(?<segment>.*) -> /$\{segment}

        #user GET 조회
        - id: user-service
          uri: lb://USER-SERVICE
          predicates:
            - Path=/user-service/**
            - Method=GET
          filters:
            - RemoveRequestHeader=Cookie
            - RewritePath=/user-service/(?<segment>.*), /$\{segment} # /user-service/(?<segment>.*) -> /$\{segment}
            - AuthorizationHeaderFilter

        - id: first-service
          uri: lb://first-service
          predicates:
            - Path=/first-service/**
          filters: CustomFilter

        - id: second-service
          uri: lb://second-service
          predicates:
            - Path=/second-service/**
          filters:
            - name: CustomFilter
            - name: LoggingFilter
              args:
                baseMessage: spring cloud global filter
                preLogger: true
                postLogger: true

        - id: third-service
          uri: lb://third-service
          predicates:
            - Path=/third-service/**
          filters:
            - name: CustomFilter
            - name: LoggingFilter
              args:
                baseMessage: spring cloud global filter
                preLogger: true
                postLogger: true

        - id: catalog-service
          uri: lb://catalog-service
          predicates:
            - Path=/catalog-service/**
          filters:
            - name: CustomFilter
            - name: LoggingFilter
              args:
                baseMessage: catalog-service
                preLogger: true
                postLogger: true

        - id: order-service
          uri: lb://order-service
          predicates:
            - Path=/order-service/**
          filters:
            - name: CustomFilter
            - name: LoggingFilter
              args:
                baseMessage: order-service
                preLogger: true
                postLogger: true

      default-filters:
        - name: GlobalFilter
          args:
            baseMessage: spring cloud global filter
            preLogger: true
            postLogger: true

eureka:
  client:
    register-with-eureka: true
    fetch-registry: true
    service-url:
      defaultZone: http://localhost:8761/eureka

token:
  secret: s3cureKeyForJWTTokenGeneration12345678901234567890

management:
  endpoints:
    web:
      exposure:
        include: refresh, health, beans, httptrace, busrefresh, info, metrics, prometheus
